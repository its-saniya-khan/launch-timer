{"ast":null,"code":"var _jsxFileName = \"/Users/s0s0clx/launch-timer/src/components/LaunchTimer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TimerBlock from \"./TimerBlock\";\nimport { TimerWrapper } from \"../App.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LAUNCH_DATE = new Date(\"2021-06-18T17:31:00\");\nconst TIMER_TITLES = [\"days\", \"hours\", \"minutes\", \"seconds\"];\nexport default function LaunchTimer({\n  onTimerEnd\n}) {\n  _s();\n\n  const [days, setDays] = useState(null);\n  const [hours, setHours] = useState(null);\n  const [minutes, setMinutes] = useState(null);\n  const [seconds, setSeconds] = useState(null);\n  useEffect(() => {\n    const launchDateTime = LAUNCH_DATE.getTime();\n    const interval = setInterval(() => {\n      const currentDate = Date.now(); //Time difference in seconds\n\n      const diff = (launchDateTime - currentDate) / 1000;\n\n      if (diff <= 0) {\n        clearInterval(interval);\n        onTimerEnd();\n        return;\n      }\n\n      const seconds = Math.floor(diff % 60);\n      const minutes = Math.floor(diff / 60 % 60);\n      const hours = Math.floor(diff / (60 * 60) % 24);\n      const days = Math.floor(diff / (60 * 60 * 24));\n      setDays(days);\n      setHours(hours);\n      setMinutes(minutes);\n      setSeconds(seconds);\n    }, 1000);\n  });\n  return /*#__PURE__*/_jsxDEV(TimerWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(TimerBlock, {\n      value: days,\n      title: TIMER_TITLES[0]\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerBlock, {\n      value: hours,\n      title: TIMER_TITLES[1]\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerBlock, {\n      value: minutes,\n      title: TIMER_TITLES[2]\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerBlock, {\n      value: seconds,\n      title: TIMER_TITLES[3]\n    }, 3, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LaunchTimer, \"UizX17CSnMRPtgYGyfJWjUx32gU=\");\n\n_c = LaunchTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LaunchTimer\");","map":{"version":3,"sources":["/Users/s0s0clx/launch-timer/src/components/LaunchTimer.jsx"],"names":["React","useEffect","useState","TimerBlock","TimerWrapper","LAUNCH_DATE","Date","TIMER_TITLES","LaunchTimer","onTimerEnd","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","launchDateTime","getTime","interval","setInterval","currentDate","now","diff","clearInterval","Math","floor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,YAAR,QAA2B,eAA3B;;AAEA,MAAMC,WAAW,GAAG,IAAIC,IAAJ,CAAS,qBAAT,CAApB;AACA,MAAMC,YAAY,GAAG,CAAC,MAAD,EAAQ,OAAR,EAAgB,SAAhB,EAA0B,SAA1B,CAArB;AAEA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAmC;AAAA;;AAChD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,cAAc,GAAGb,WAAW,CAACc,OAAZ,EAAvB;AAEA,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjC,YAAMC,WAAW,GAAGhB,IAAI,CAACiB,GAAL,EAApB,CADiC,CAGjC;;AACA,YAAMC,IAAI,GAAG,CAACN,cAAc,GAAGI,WAAlB,IAAiC,IAA9C;;AACA,UAAIE,IAAI,IAAI,CAAZ,EAAe;AACbC,QAAAA,aAAa,CAACL,QAAD,CAAb;AACAX,QAAAA,UAAU;AACV;AACD;;AACD,YAAMO,OAAO,GAAGU,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAhB;AACA,YAAMV,OAAO,GAAGY,IAAI,CAACC,KAAL,CAAYH,IAAI,GAAG,EAAR,GAAc,EAAzB,CAAhB;AACA,YAAMZ,KAAK,GAAGc,IAAI,CAACC,KAAL,CAAYH,IAAI,IAAI,KAAK,EAAT,CAAL,GAAqB,EAAhC,CAAd;AACA,YAAMd,IAAI,GAAGgB,IAAI,CAACC,KAAL,CAAWH,IAAI,IAAI,KAAK,EAAL,GAAU,EAAd,CAAf,CAAb;AAEAb,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KAnB2B,EAmBzB,IAnByB,CAA5B;AAoBD,GAvBQ,CAAT;AAyBA,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,UAAD;AAAoB,MAAA,KAAK,EAAEN,IAA3B;AAAiC,MAAA,KAAK,EAAEH,YAAY,CAAC,CAAD;AAApD,OAAiB,CAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAoB,MAAA,KAAK,EAAEK,KAA3B;AAAkC,MAAA,KAAK,EAAEL,YAAY,CAAC,CAAD;AAArD,OAAiB,CAAjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAoB,MAAA,KAAK,EAAEO,OAA3B;AAAoC,MAAA,KAAK,EAAEP,YAAY,CAAC,CAAD;AAAvD,OAAiB,CAAjB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,UAAD;AAAoB,MAAA,KAAK,EAAES,OAA3B;AAAoC,MAAA,KAAK,EAAET,YAAY,CAAC,CAAD;AAAvD,OAAiB,CAAjB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAvCuBC,W;;KAAAA,W","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TimerBlock from \"./TimerBlock\"\nimport {TimerWrapper} from \"../App.styles\"\n\nconst LAUNCH_DATE = new Date(\"2021-06-18T17:31:00\");\nconst TIMER_TITLES = [\"days\",\"hours\",\"minutes\",\"seconds\"]\n\nexport default function LaunchTimer({onTimerEnd}) {\n  const [days, setDays] = useState(null);\n  const [hours, setHours] = useState(null);\n  const [minutes, setMinutes] = useState(null);\n  const [seconds, setSeconds] = useState(null);\n\n  useEffect(() => {\n    const launchDateTime = LAUNCH_DATE.getTime();\n\n    const interval = setInterval(() => {\n      const currentDate = Date.now();\n\n      //Time difference in seconds\n      const diff = (launchDateTime - currentDate) / 1000;\n      if (diff <= 0) {\n        clearInterval(interval);\n        onTimerEnd();\n        return;\n      }\n      const seconds = Math.floor(diff % 60);\n      const minutes = Math.floor((diff / 60) % 60);\n      const hours = Math.floor((diff / (60 * 60)) % 24);\n      const days = Math.floor(diff / (60 * 60 * 24));\n\n      setDays(days);\n      setHours(hours);\n      setMinutes(minutes);\n      setSeconds(seconds);\n    }, 1000);\n  });\n\n  return (\n    <TimerWrapper>\n      <TimerBlock key={0} value={days} title={TIMER_TITLES[0]} />\n      <TimerBlock key={1} value={hours} title={TIMER_TITLES[1]} />\n      <TimerBlock key={2} value={minutes} title={TIMER_TITLES[2]} />\n      <TimerBlock key={3} value={seconds} title={TIMER_TITLES[3]} />\n    </TimerWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}