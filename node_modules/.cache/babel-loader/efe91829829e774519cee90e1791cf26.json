{"ast":null,"code":"var _jsxFileName = \"/Users/s0s0clx/launch-timer/src/components/TimerBlock.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TimerContainer, TimerTitle, TimerBlock } from \"../App.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = ({\n  value,\n  title\n}) => {\n  _s();\n\n  const [animate, setAnimate] = useState(false);\n  useEffect(() => {\n    setAnimate(prev => !prev);\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(TimerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TimerBlock, {\n      animate: animate,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: value === null || value === void 0 ? void 0 : value.toLocaleString(\"en-US\", {\n          minimumIntegerDigits: 2,\n          useGrouping: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerTitle, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"z07FJ1oDfa7+qdGd0fWFFN4Jr94=\");\n\n_c = Timer;\nexport default _c2 = /*#__PURE__*/React.memo(Timer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Timer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/s0s0clx/launch-timer/src/components/TimerBlock.jsx"],"names":["React","useEffect","useState","TimerContainer","TimerTitle","TimerBlock","Timer","value","title","animate","setAnimate","prev","toLocaleString","minimumIntegerDigits","useGrouping","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,UAArC,QAAuD,eAAvD;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AAAA;;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU,CAAEC,IAAD,IAAU,CAACA,IAAZ,CAAV;AACD,GAFQ,EAEN,CAACJ,KAAD,CAFM,CAAT;AAIA,sBACE,QAAC,cAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEE,OAArB;AAAA,6BACE;AAAA,kBACGF,KADH,aACGA,KADH,uBACGA,KAAK,CAAEK,cAAP,CAAsB,OAAtB,EAA+B;AAC9BC,UAAAA,oBAAoB,EAAE,CADQ;AAE9BC,UAAAA,WAAW,EAAE;AAFiB,SAA/B;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,UAAD;AAAA,gBAAaN;AAAb;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CApBD;;GAAMF,K;;KAAAA,K;AAsBN,kCAAeN,KAAK,CAACe,IAAN,CAAWT,KAAX,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { TimerContainer, TimerTitle, TimerBlock } from \"../App.styles\";\n\nconst Timer = ({ value, title }) => {\n  const [animate, setAnimate] = useState(false);\n  \n  useEffect(() => {\n    setAnimate((prev) => !prev);\n  }, [value]);\n\n  return (\n    <TimerContainer>\n      <TimerBlock animate={animate}>\n        <span>\n          {value?.toLocaleString(\"en-US\", {\n            minimumIntegerDigits: 2,\n            useGrouping: false,\n          })}\n        </span>\n      </TimerBlock>\n      <TimerTitle>{title}</TimerTitle>\n    </TimerContainer>\n  );\n};\n\nexport default React.memo(Timer);\n"]},"metadata":{},"sourceType":"module"}